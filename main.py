import os
import pandas as pd
from androguard.misc import AnalyzeAPK
from collections import Counter


# Function to extract API calls from the APK file
def extract_api_calls(apk_file_path):
    try:
        # Analyze APK file
        a, d, dx = AnalyzeAPK(apk_file_path)

        # Get the list of API calls
        api_calls = []  # Use a list to keep all occurrences
        for method in dx.get_methods():
            # Add the method name (API call) to the list
            api_call = method.name
            api_calls.append(api_call)

        return api_calls  # Return a list of API calls

    except Exception as e:
        # Print error message if extraction fails
        print(f"Failed to extract API calls from {apk_file_path}: {e}")
        return None


# Function to extract API call frequency
def extract_api_call_frequency(apk_file_path, api_list):
    # Get the list of API calls from the APK file
    api_calls = extract_api_calls(apk_file_path)
    if api_calls:
        # Create a Counter object to store API call frequencies
        api_call_counts = Counter(api_calls)

        # Create a dictionary to store frequencies for the specified API list
        api_call_freq = {api: api_call_counts.get(api, 0) for api in api_list}
        return api_call_freq
    return None


# Main function to extract API call frequencies from all APK files in the folder
def main():
    # Define the path to your folder containing APK files
    folder_path = "CIC2020"

    # List of API calls you want to track
    api_list = [
        "__arm_nr_cacheflush",
        "__arm_nr_set_tls",
        "_llseek",
        "_newselect",
        "accept",
        "access",
        "add",
        "addAccessibilityInteractionConnection",
        "addAccountExplicitly",
        "addClient",
        "addPeriodicSync",
        "addStatusChangeListener",
        "addToDisplay",
        "addToDisplayWithoutInputChannel",
        "addWithoutInputChannel",
        "attachEngine",
        "beginRestoreSession",
        "bind",
        "brk",
        "cancelAllNotifications",
        "cancelNotificationWithTag",
        "cancelSync",
        "cancelToast",
        "cancelVibrate",
        "capset",
        "chdir",
        "checkOperation",
        "checkPackage",
        "checkPermission",
        "checkSignatures",
        "chmod",
        "chown32",
        "clock_getres",
        "clock_gettime",
        "clone",
        "close",
        "collapsePanels",
        "connect",
        "currentToCanonicalPackageNames",
        "dataChanged",
        "deleteHost",
        "disconnect",
        "displayCompletions",
        "dup",
        "dup2",
        "endRestoreSession",
        "engineShown",
        "enqueueNotificationWithTag",
        "enqueueToast",
        "epoll_create",
        "epoll_ctl",
        "epoll_wait",
        "eventfd2",
        "execve",
        "exit",
        "exit_group",
        "faccessat",
        "fchmod",
        "fchown32",
        "fcntl",
        "fcntl64",
        "fdatasync",
        "finishDrawing",
        "finishInput",
        "finishSpellCheckerService",
        "flock",
        "fork",
        "fstat64",
        "fstatfs64",
        "fsync",
        "ftruncate",
        "ftruncate64",
        "futex",
        "geocoderIsPresent",
        "getAccounts",
        "getAccountsAsUser",
        "getActiveAdmins",
        "getActiveNetworkInfo",
        "getActivePhoneType",
        "getActivityInfo",
        "getAllCellInfo",
        "getAllNetworkInfo",
        "getAllPkgUsageStats",
        "getAllProviders",
        "getAnimationScale",
        "getAppWidgetIds",
        "getAppWidgetInfo",
        "getApplicationEnabledSetting",
        "getApplicationInfo",
        "getApplicationRestrictions",
        "getAuthenticatorTypes",
        "getBestProvider",
        "getBoolean",
        "getCallState",
        "getCameraDisabled",
        "getCameraInfo",
        "getCellLocation",
        "getClientDefaultLanguage",
        "getComponentEnabledSetting",
        "getConfiguredNetworks",
        "getConnectionInfo",
        "getCurrentInputMethodSubtype",
        "getCurrentModeType",
        "getCurrentSpellChecker",
        "getCurrentSpellCheckerSubtype",
        "getDataActivity",
        "getDataNetworkType",
        "getDataState",
        "getDeviceId",
        "getDeviceList",
        "getDeviceOwner",
        "getDeviceSvn",
        "getDhcpInfo",
        "getDisplayFrame",
        "getDisplayIds",
        "getDisplayInfo",
        "getEnabledAccessibilityServiceList",
        "getEnabledInputMethodList",
        "getEnabledInputMethodSubtypeList",
        "getFlashlightEnabled",
        "getFromLocation",
        "getGlobalSearchActivity",
        "getGroupIdLevel1",
        "getHeightHint",
        "getIccSerialNumber",
        "getInTouchMode",
        "getInputDevice",
        "getInputDeviceIds",
        "getInputMethodList",
        "getInstallLocation",
        "getInstalledApplications",
        "getInstalledPackages",
        "getInstalledProviders",
        "getInstallerPackageName",
        "getIsSyncable",
        "getLastChosenActivity",
        "getLastInputMethodSubtype",
        "getLastLocation",
        "getLine1Number",
        "getLong",
        "getMasterSyncAutomatically",
        "getMessenger",
        "getMobileDataEnabled",
        "getMobileIfaces",
        "getMode",
        "getNameForUid",
        "getNeighboringCellInfo",
        "getNetworkInfo",
        "getNetworkPreference",
        "getNightMode",
        "getNumberOfCameras",
        "getPackageGids",
        "getPackageInfo",
        "getPackageSizeInfo",
        "getPackagesForUid",
        "getPassword",
        "getPermissionGroupInfo",
        "getPermissionInfo",
        "getPreferredActivities",
        "getPreferredPackages",
        "getPrimaryClip",
        "getProviderInfo",
        "getProviderProperties",
        "getProviders",
        "getProxy",
        "getReceiverInfo",
        "getRingerMode",
        "getRingtonePlayer",
        "getScanResults",
        "getSearchableInfo",
        "getSearchablesInGlobalSearch",
        "getServiceInfo",
        "getSpellCheckerService",
        "getState",
        "getStorageEncryptionStatus",
        "getStreamMaxVolume",
        "getStreamVolume",
        "getString",
        "getSubscriberId",
        "getSyncAutomatically",
        "getSystemAvailableFeatures",
        "getSystemSharedLibraryNames",
        "getTetheredIfaces",
        "getUserData",
        "getUserIcon",
        "getUserRestrictions",
        "getUserSerialNumber",
        "getUsers",
        "getVibrateSetting",
        "getVoiceMailAlphaTag",
        "getVoiceMailNumber",
        "getWallpaper",
        "getWallpaperInfo",
        "getWidthHint",
        "getWifiApConfiguration",
        "getWifiApEnabledState",
        "getWifiDisplayStatus",
        "getWifiEnabledState",
        "getWifiServiceMessenger",
        "getcwd",
        "getdents64",
        "getegid32",
        "geteuid32",
        "getgid32",
        "getgroups32",
        "getpeername",
        "getpgid",
        "getpid",
        "getppid",
        "getpriority",
        "getresgid32",
        "getresuid32",
        "getrusage",
        "getsockname",
        "getsockopt",
        "gettid",
        "gettimeofday",
        "getuid32",
        "hasClipboardText",
        "hasIccCard",
        "hasKeys",
        "hasNamedWallpaper",
        "hasNavigationBar",
        "hasPrimaryClip",
        "hasSystemFeature",
        "hasVibrator",
        "hideSoftInput",
        "inKeyguardRestrictedInputMode",
        "inotify_add_watch",
        "inotify_init",
        "inotify_rm_watch",
        "ioctl",
        "isActiveNetworkMetered",
        "isAdminActive",
        "isBluetoothA2dpOn",
        "isBluetoothScoOn",
        "isCameraSoundForced",
        "isImsSmsSupported",
        "isKeyguardLocked",
        "isKeyguardSecure",
        "isPackageAvailable",
        "isProviderEnabled",
        "isSafeMode",
        "isScanAlwaysAvailable",
        "isScreenOn",
        "isSpeakerphoneOn",
        "isSpellCheckerEnabled",
        "isSyncActive",
        "isWakeLockLevelSupported",
        "lgetxattr",
        "link",
        "listen",
        "locationCallbackFinished",
        "lseek",
        "lstat64",
        "madvise",
        "mkdir",
        "mknod",
        "mlock",
        "mmap2",
        "mount",
        "mprotect",
        "mremap",
        "msync",
        "munlock",
        "munmap",
        "nanosleep",
        "notifyAppWidgetViewDataChanged",
        "notifyChange",
        "onChange",
        "onClose",
        "onFinished",
        "onGetSentenceSuggestionsMultiple",
        "onRectangleOnScreenRequested",
        "onRequestContinued",
        "onResult",
        "open",
        "openSession",
        "partiallyUpdateAppWidgetIds",
        "performDeferredDestroy",
        "pingSupplicant",
        "pipe",
        "pipe2",
        "play",
        "playSoundEffect",
        "playSoundEffectVolume",
        "poll",
        "prctl",
        "pread64",
        "prepareVpn",
        "ptrace",
        "pwrite64",
        "queryContentProviders",
        "queryIntentActivities",
        "queryIntentContentProviders",
        "queryIntentReceivers",
        "queryIntentServices",
        "read",
        "readlink",
        "reassociate",
        "recvfrom",
        "recvmsg",
        "reenableKeyguard",
        "registerCallback",
        "registerContentObserver",
        "registerInputDevicesChangedListener",
        "registerMediaButtonIntent",
        "registerRemoteControlClient",
        "registerSuggestionSpansForNotification",
        "relayout",
        "releaseMulticastLock",
        "releaseWakeLock",
        "releaseWifiLock",
        "remove",
        "removeAccessibilityInteractionConnection",
        "removeActiveAdmin",
        "removeGpsStatusListener",
        "removePrimaryClipChangedListener",
        "removeStatusChangeListener",
        "rename",
        "requestLocationUpdates",
        "requestScanFile",
        "resolveContentProvider",
        "resolveIntent",
        "resolveService",
        "restorePackage",
        "rmdir",
        "rt_sigprocmask",
        "rt_sigtimedwait",
        "sched_get_priority_max",
        "sched_get_priority_min",
        "sched_getscheduler",
        "sched_setscheduler",
        "send",
        "sendto",
        "setAllowWhileIdle",
        "setAppWidgetOptions",
        "setAutoClose",
        "setAutoLogin",
        "setBluetoothEnabled",
        "setCameraDisabled",
        "setClipData",
        "setClusterSize",
        "setDebug",
        "setDefaultDialer",
        "setDefaultSmsApp",
        "setDisabled",
        "setEnabled",
        "setEnabledAccessibilityService",
        "setGlobalProxy",
        "setHasWarning",
        "setIccCardEnabled",
        "setInTouchMode",
        "setLocationEnabled",
        "setMaxNetworkTime",
        "setNetworkPreference",
        "setNextAlarmClock",
        "setOnBroadcastSender",
        "setOnFocusChangeListener",
        "setOnLongClickListener",
        "setOnTimeChangeListener",
        "setRingerMode",
        "setScreenBrightness",
        "setScreenOffTimeout",
        "setSetting",
        "setSignalStrength",
        "setSyncAutomatically",
        "setVibrateSetting",
        "setVolume",
        "setWifiApConfiguration",
        "setWifiEnabled",
        "setWifiState",
        "shutdown",
        "shutdownBlocking",
        "signal",
        "signalEvent",
        "sigsuspend",
        "socket",
        "socketpair",
        "splice",
        "suspend",
        "system",
        "syscall",
        "sync",
        "syncFileSystem",
        "syncToFileSystem",
        "sysinfo",
        "taskRemoved",
        "telnet",
        "terminate",
        "test",
        "testGetUserProfile",
        "testNetwork",
        "testService",
        "time",
        "timerDelete",
        "timerSet",
        "timevalToMillis",
        "unlink",
        "updateDeviceState",
        "updateScreenState",
        "updateWifiApState",
        "wait",
        "waitpid",
        "write",
        "writev"
    ]

    # Create a list to store results
    results = []

    # Loop through all files in the folder
    for filename in os.listdir(folder_path):
        if filename.endswith(".apk"):
            apk_file_path = os.path.join(folder_path, filename)
            # Extract API call frequency for the APK file
            api_call_freq = extract_api_call_frequency(apk_file_path, api_list)
            if api_call_freq:
                api_call_freq['APK File'] = filename  # Add the APK filename to the result
                results.append(api_call_freq)

    # Convert results to a DataFrame
    df = pd.DataFrame(results)

    # Save DataFrame to a CSV file
    df.to_csv("api_call_frequencies.csv", index=False)

    print("API call frequencies saved to api_call_frequencies.csv")

if __name__ == "__main__":
    main()
